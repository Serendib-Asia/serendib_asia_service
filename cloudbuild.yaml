steps:
  - name: gcr.io/cloud-builders/gcloud
    id: Configuration
    entrypoint: bash
    args:
      - "-c"
      - |
        #!/usr/bin/env bash
        echo "Determining Docker image tag..."
        if [[ -n "${TAG_NAME}" ]]; then
          echo "Push Tag Trigger Detected: ${TAG_NAME}"
          echo "${TAG_NAME}" > image_tag.txt

        else
          echo "No tag detected, using Build ID: ${BUILD_ID}"
          echo "${BUILD_ID}" > image_tag.txt
        fi

  - name: gcr.io/cloud-builders/docker
    args:
      - "-c"
      - |
        echo "Starting Docker build..."
        docker build -t $$GCP_REGISTRY/$$IMAGE_NAME-${_CLIENT}:$(cat image_tag.txt)  \
          .

        if [ $? -ne 0 ]; then
          echo "docker build failed"
          exit 1
        fi
        echo "Docker build succeeded."
    id: Build
    entrypoint: bash
    secretEnv:
      - GCP_REGISTRY
      - IMAGE_NAME
  - name: gcr.io/cloud-builders/docker
    args:
      - "-c"
      - |
        echo "Starting Docker push..."
        docker push $$GCP_REGISTRY/$$IMAGE_NAME-${_CLIENT}:$(cat image_tag.txt) 
        if [ $? -ne 0 ]; then
          echo "Docker push failed"
          exit 1
        fi
        echo "Docker push succeeded."
    id: Push
    entrypoint: bash
    secretEnv:
      - GCP_REGISTRY
      - IMAGE_NAME
  - name: gcr.io/cloud-builders/gcloud
    args:
      - "-c"
      - |
        echo "Debugging deployment variables..."
        echo "GCP_REGISTRY: $$GCP_REGISTRY"
        echo "IMAGE_NAME: $$IMAGE_NAME"
        echo "SERVICE_NAME: $$SERVICE_NAME"
        echo "IMAGE: $$GCP_REGISTRY/$$IMAGE_NAME-${_CLIENT}:$(cat image_tag.txt) "
    id: Debug
    entrypoint: bash
    secretEnv:
      - GCP_REGISTRY
      - IMAGE_NAME
      - SERVICE_NAME
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk
    args:
      - "-c"
      - |
        echo "Starting Cloud Run deployment..."
        gcloud run deploy $$SERVICE_NAME-${_CLIENT} \
          --image $$GCP_REGISTRY/$$IMAGE_NAME-${_CLIENT}:$(cat image_tag.txt)  \
          --region $$REGION \
          --allow-unauthenticated \
          --port=8080 \
          --service-account=$$SA_ACCOUNT \
          --set-cloudsql-instances=$$CLOUD_SQL_INSTANCE,$$ICX_CLOUD_SQL_INSTANCE \
          --platform=managed \
          --vpc-connector=projects/$$GCP_PROJECT/locations/$$REGION/connectors/$$VPC_CONNECTOR \
          --vpc-egress=private-ranges-only \
          --project=$$GCP_PROJECT \
          --set-env-vars DB_HOST=$$DB_HOST \
          --set-env-vars DB_PORT=$$DB_PORT \
          --set-env-vars DB_NAME=$$DB_NAME \
          --set-env-vars DB_USER=$$DB_USER \
          --set-env-vars DB_PASSWORD=$$DB_PASSWORD \
          --set-env-vars IS_CLOUD_SQL=$$IS_CLOUD_SQL \
          --set-env-vars SRV_LISTEN_PORT=$$SRV_LISTEN_PORT \
          --set-env-vars AUTH_SERVER_BASE_URL=$$AUTH_SERVER_BASE_URL \
          --set-env-vars TOKEN_VALIDATE_ENDPOINT=$$TOKEN_VALIDATE_ENDPOINT \
          --set-env-vars SEC_SRV_GET_ALL_USER_DETAILS_ENDPOINT=$$SEC_SRV_GET_ALL_USER_DETAILS_ENDPOINT \
          --set-env-vars DEFAULT_CLIENT=${_CLIENT} \
          --set-env-vars CLIENT_DB_HOST=$$CLOUD_SQL_INSTANCE \
          --set-env-vars CLIENT_DB_PORT=$$SDESK_DB_PORT \
          --set-env-vars CLIENT_DB_NAME=$$SDESK_DB_NAME \
          --set-env-vars CLIENT_DB_USER=$$SDESK_DB_USER \
          --set-env-vars CLIENT_DB_PASSWORD=$$SDESK_DB_PASSWORD \
          
          if [ $? -ne 0 ]; then
          echo "Cloud Run deployment failed"
          exit 1
          fi
          echo "Cloud Run deployment succeeded."
    id: Deploy
    entrypoint: bash
    secretEnv:
      - SERVICE_NAME
      - GCP_REGISTRY
      - IMAGE_NAME
      - REGION
      - SA_ACCOUNT
      - ICX_CLOUD_SQL_INSTANCE
      - CLOUD_SQL_INSTANCE
      - GCP_PROJECT
      - VPC_CONNECTOR
      - DB_HOST
      - DB_NAME
      - DB_USER
      - DB_PASSWORD
      - IS_CLOUD_SQL
      - SRV_LISTEN_PORT
      - AUTH_SERVER_BASE_URL
      - TOKEN_VALIDATE_ENDPOINT
      - SEC_SRV_GET_ALL_USER_DETAILS_ENDPOINT
      - SDESK_DB_NAME
      - SDESK_DB_USER
      - SDESK_DB_PASSWORD
options:
  logging: CLOUD_LOGGING_ONLY
availableSecrets:
  secretManager:
    - versionName: >-
        projects/$PROJECT_ID/secrets/ICX_DASHBOARD_VPC_CONNECTOR_${_STAGE}/versions/latest
      env: VPC_CONNECTOR
    - versionName: >-
        projects/$PROJECT_ID/secrets/ICX_DASHBOARD_IMAGE_NAME_${_STAGE}/versions/latest
      env: IMAGE_NAME
    - versionName: >-
        projects/$PROJECT_ID/secrets/ICX_DASHBOARD_SERVICE_NAME_${_STAGE}/versions/latest
      env: SERVICE_NAME
    - versionName: >-
        projects/$PROJECT_ID/secrets/ICX_DASHBOARD_CLOUD_SQL_INSTANCE_${_STAGE}-${_CLIENT}/versions/latest
      env: CLOUD_SQL_INSTANCE
    - versionName: >-
        projects/$PROJECT_ID/secrets/ICX_DASHBOARD_CLOUD_SQL_INSTANCE_${_STAGE}/versions/latest
      env: ICX_CLOUD_SQL_INSTANCE
    - versionName: >-
        projects/$PROJECT_ID/secrets/ICX_DASHBOARD_DB_HOST_${_STAGE}/versions/latest
      env: DB_HOST
    - versionName: >-
        projects/$PROJECT_ID/secrets/ICX_DASHBOARD_DB_NAME_${_STAGE}/versions/latest
      env: DB_NAME
    - versionName: >-
        projects/$PROJECT_ID/secrets/ICX_DASHBOARD_DB_USER_${_STAGE}/versions/latest
      env: DB_USER
    - versionName: >-
        projects/$PROJECT_ID/secrets/ICX_DASHBOARD_DB_PASSWORD_${_STAGE}/versions/latest
      env: DB_PASSWORD
    - versionName: >-
        projects/$PROJECT_ID/secrets/ICX_DASHBOARD_GCP_PROJECT_${_STAGE}/versions/latest
      env: GCP_PROJECT
    - versionName: >-
        projects/$PROJECT_ID/secrets/ICX_DASHBOARD_SA_ACCOUNT_${_STAGE}/versions/latest
      env: SA_ACCOUNT
    - versionName: >-
        projects/$PROJECT_ID/secrets/ICX_DASHBOARD_GCP_REGISTRY_${_STAGE}/versions/latest
      env: GCP_REGISTRY
    - versionName: >-
        projects/$PROJECT_ID/secrets/ICX_DASHBOARD_REGION_${_STAGE}/versions/latest
      env: REGION
    - versionName: >-
        projects/$PROJECT_ID/secrets/ICX_DASHBOARD_IS_CLOUD_SQL_${_STAGE}/versions/latest
      env: IS_CLOUD_SQL
    - versionName: >-
        projects/$PROJECT_ID/secrets/ICX_DASHBOARD_SRV_LISTEN_PORT_${_STAGE}/versions/latest
      env: SRV_LISTEN_PORT
    - versionName: >-
        projects/$PROJECT_ID/secrets/ICX_DASHBOARD_AUTH_SERVER_BASE_URL_${_STAGE}/versions/latest
      env: AUTH_SERVER_BASE_URL
    - versionName: >-
        projects/$PROJECT_ID/secrets/ICX_DASHBOARD_TOKEN_VALIDATE_ENDPOINT_${_STAGE}/versions/latest
      env: TOKEN_VALIDATE_ENDPOINT
    - versionName: >-
        projects/$PROJECT_ID/secrets/ICX_DASHBOARD_SEC_SRV_GET_ALL_USER_DETAILS_ENDPOINT_${_STAGE}/versions/latest
      env: SEC_SRV_GET_ALL_USER_DETAILS_ENDPOINT
    - versionName: >-
        projects/$PROJECT_ID/secrets/ICX_DASHBOARD_${_CLIENT}_DB_NAME_${_STAGE}/versions/latest
      env: SDESK_DB_NAME
    - versionName: >-
        projects/$PROJECT_ID/secrets/ICX_DASHBOARD_${_CLIENT}_DB_USER_${_STAGE}/versions/latest
      env: SDESK_DB_USER
    - versionName: >-
        projects/$PROJECT_ID/secrets/ICX_DASHBOARD_${_CLIENT}_DB_PASSWORD_${_STAGE}/versions/latest
      env: SDESK_DB_PASSWORD
